# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2020-09-10 04:22
from __future__ import unicode_literals

import annoying.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import json
import publisher.utils


class Migration(migrations.Migration):

    replaces = [('publisher', '0001_squashed_0040_auto_20170315_0459'), ('publisher', '0002_auto_20170321_0226'), ('publisher', '0003_auto_20170322_0529'), ('publisher', '0004_auto_20170323_2350'), ('publisher', '0005_auto_20170407_0016'), ('publisher', '0006_auto_20170531_0118'), ('publisher', '0007_auto_20170721_0857'), ('publisher', '0008_articleversion_article_json_hash'), ('publisher', '0009_auto_20200910_0409')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doi', models.CharField(help_text=b"Article's unique ID in the wider world. All articles must have one as an absolute minimum", max_length=255, unique=True)),
                ('title', models.CharField(blank=True, help_text=b'The title of the article', max_length=255, null=True)),
                ('version', models.PositiveSmallIntegerField(default=1, help_text=b'The version of the article. All articles have at least a version 1')),
                ('volume', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[(b'poa', b'POA'), (b'vor', b'VOR')], max_length=3, null=True)),
                ('website_path', models.CharField(max_length=50)),
                ('datetime_submitted', models.DateTimeField(blank=True, help_text=b'Date author submitted article', null=True)),
                ('datetime_accepted', models.DateTimeField(blank=True, help_text=b'Date article accepted for publication', null=True)),
                ('datetime_published', models.DateTimeField(blank=True, help_text=b'Date article first appeared on website', null=True)),
                ('datetime_record_created', models.DateTimeField(auto_now_add=True, help_text=b'Date this article was created')),
                ('datetime_record_updated', models.DateTimeField(auto_now=True, help_text=b'Date this article was updated')),
            ],
        ),
        migrations.CreateModel(
            name='Journal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text=b'Name of the journal.', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.AddField(
            model_name='journal',
            name='publisher',
            field=models.ForeignKey(help_text="A publisher may have many journals. A journal doesn't necessarily need a Publisher.", null=True, on_delete=django.db.models.deletion.SET_NULL, to='publisher.Publisher'),
        ),
        migrations.AddField(
            model_name='article',
            name='journal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='publisher.Journal'),
        ),
        migrations.AddField(
            model_name='article',
            name='type',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='article',
            name='version',
            field=models.PositiveSmallIntegerField(default=0, help_text=b'The version of the article. Version=0 means pre-publication'),
        ),
        migrations.AlterUniqueTogether(
            name='article',
            unique_together=set([('doi', 'version')]),
        ),
        migrations.AlterField(
            model_name='article',
            name='version',
            field=models.PositiveSmallIntegerField(default=None, help_text=b'The version of the article. Version=None means pre-publication'),
        ),
        migrations.AlterModelOptions(
            name='article',
            options={},
        ),
        migrations.AddField(
            model_name='journal',
            name='inception',
            field=models.DateTimeField(blank=True, help_text='Date journal was created.', null=True),
        ),
        migrations.CreateModel(
            name='ArticleVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text=b'The title of the article', max_length=255, null=True)),
                ('version', models.PositiveSmallIntegerField(default=None, help_text=b'The version of the article. Version=None means pre-publication')),
                ('status', models.CharField(blank=True, choices=[(b'poa', b'POA'), (b'vor', b'VOR')], max_length=3, null=True)),
                ('datetime_published', models.DateTimeField(blank=True, help_text=b'Date article first appeared on website', null=True)),
                ('datetime_record_created', models.DateTimeField(auto_now_add=True, help_text=b'Date this article was created')),
                ('datetime_record_updated', models.DateTimeField(auto_now=True, help_text=b'Date this article was updated')),
            ],
        ),
        migrations.AlterField(
            model_name='article',
            name='doi',
            field=models.CharField(help_text=b"Article's unique ID in the wider world. All articles must have one as an absolute minimum", max_length=255, unique=True),
        ),
        migrations.AlterUniqueTogether(
            name='article',
            unique_together=set([]),
        ),
        migrations.RemoveField(
            model_name='article',
            name='datetime_published',
        ),
        migrations.RemoveField(
            model_name='article',
            name='version',
        ),
        migrations.RemoveField(
            model_name='article',
            name='status',
        ),
        migrations.RemoveField(
            model_name='article',
            name='title',
        ),
        migrations.AddField(
            model_name='articleversion',
            name='article',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='publisher.Article'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='articleversion',
            name='article_json_v1',
            field=annoying.fields.JSONField(blank=True, deserializer=json.loads, help_text=b'Valid article-json.', null=True, serializer=annoying.fields.dumps),
        ),
        migrations.AddField(
            model_name='articleversion',
            name='article_json_v1_snippet',
            field=annoying.fields.JSONField(blank=True, deserializer=json.loads, help_text=b'Valid article-json snippet, extracted from the valid article-json', null=True, serializer=annoying.fields.dumps),
        ),
        migrations.AlterUniqueTogether(
            name='articleversion',
            unique_together=set([('article', 'version')]),
        ),
        migrations.RemoveField(
            model_name='article',
            name='datetime_accepted',
        ),
        migrations.AddField(
            model_name='article',
            name='date_full_decision',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='article',
            name='date_full_qc',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='article',
            name='date_initial_decision',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='article',
            name='date_initial_qc',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='article',
            name='date_rev1_decision',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='article',
            name='date_rev1_qc',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='article',
            name='date_rev2_decision',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='article',
            name='date_rev2_qc',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='article',
            name='date_rev3_decision',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='article',
            name='date_rev3_qc',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='article',
            name='date_rev4_decision',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='article',
            name='date_rev4_qc',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='article',
            name='decision',
            field=models.CharField(blank=True, choices=[(b'RJI', b'Reject Initial Submission'), (b'RJF', b'Reject Full Submission'), (b'RVF', b'Revise Full Submission'), (b'AF', b'Accept Full Submission'), (b'EF', b'Encourage Full Submission'), (b'SW', b'Simple Withdraw')], max_length=25, null=True),
        ),
        migrations.AddField(
            model_name='article',
            name='ejp_type',
            field=models.CharField(blank=True, choices=[(b'RA', b'Research article'), (b'SR', b'Short report'), (b'AV', b'Research advance'), (b'RR', b'Registered report'), (b'TR', b'Tools and resources')], help_text=b'article as exported from EJP submission system', max_length=3, null=True),
        ),
        migrations.AddField(
            model_name='article',
            name='initial_decision',
            field=models.CharField(blank=True, choices=[(b'RJI', b'Reject Initial Submission'), (b'RJF', b'Reject Full Submission'), (b'RVF', b'Revise Full Submission'), (b'AF', b'Accept Full Submission'), (b'EF', b'Encourage Full Submission'), (b'SW', b'Simple Withdraw')], max_length=25, null=True),
        ),
        migrations.AddField(
            model_name='article',
            name='rev1_decision',
            field=models.CharField(blank=True, choices=[(b'RJI', b'Reject Initial Submission'), (b'RJF', b'Reject Full Submission'), (b'RVF', b'Revise Full Submission'), (b'AF', b'Accept Full Submission'), (b'EF', b'Encourage Full Submission'), (b'SW', b'Simple Withdraw')], max_length=25, null=True),
        ),
        migrations.AddField(
            model_name='article',
            name='rev2_decision',
            field=models.CharField(blank=True, choices=[(b'RJI', b'Reject Initial Submission'), (b'RJF', b'Reject Full Submission'), (b'RVF', b'Revise Full Submission'), (b'AF', b'Accept Full Submission'), (b'EF', b'Encourage Full Submission'), (b'SW', b'Simple Withdraw')], max_length=25, null=True),
        ),
        migrations.AddField(
            model_name='article',
            name='rev3_decision',
            field=models.CharField(blank=True, choices=[(b'RJI', b'Reject Initial Submission'), (b'RJF', b'Reject Full Submission'), (b'RVF', b'Revise Full Submission'), (b'AF', b'Accept Full Submission'), (b'EF', b'Encourage Full Submission'), (b'SW', b'Simple Withdraw')], max_length=25, null=True),
        ),
        migrations.AddField(
            model_name='article',
            name='rev4_decision',
            field=models.CharField(blank=True, choices=[(b'RJI', b'Reject Initial Submission'), (b'RJF', b'Reject Full Submission'), (b'RVF', b'Revise Full Submission'), (b'AF', b'Accept Full Submission'), (b'EF', b'Encourage Full Submission'), (b'SW', b'Simple Withdraw')], max_length=25, null=True),
        ),
        migrations.AlterField(
            model_name='article',
            name='type',
            field=models.CharField(blank=True, help_text=b'xml article-type.', max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='article',
            name='manuscript_id',
            field=models.PositiveIntegerField(help_text=b'article identifier from beginning of submission process right through to end of publication.', unique=True),
        ),
        migrations.AlterModelOptions(
            name='article',
            options={'ordering': ('-date_initial_qc',)},
        ),
        migrations.RemoveField(
            model_name='article',
            name='datetime_submitted',
        ),
        migrations.RemoveField(
            model_name='article',
            name='website_path',
        ),
        migrations.AlterField(
            model_name='journal',
            name='name',
            field=models.CharField(help_text=b'Name of the journal.', max_length=255, unique=True),
        ),
        migrations.CreateModel(
            name='ArticleFragment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fragment', annoying.fields.JSONField(deserializer=json.loads, help_text=b'partial piece of article data to be merged in', serializer=annoying.fields.dumps)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='publisher.Article')),
                ('position', models.PositiveSmallIntegerField(default=1, help_text=b'position in the merge order with lower fragments merged first')),
                ('type', models.CharField(default=None, help_text=b'the type of fragment, eg "xml", "content-header", etc', max_length=25, unique=True)),
                ('datetime_record_created', models.DateTimeField(auto_now_add=True, default=None)),
                ('version', models.PositiveSmallIntegerField(help_text=b'does the fragment apply to all articles or a specific version?', null=True)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='articlefragment',
            unique_together=set([('article', 'type')]),
        ),
        migrations.AlterField(
            model_name='articlefragment',
            name='type',
            field=models.CharField(help_text=b'the type of fragment, eg "xml", "content-header", etc', max_length=25),
        ),
        migrations.AlterUniqueTogether(
            name='articlefragment',
            unique_together=set([('article', 'type', 'version')]),
        ),
        migrations.AlterField(
            model_name='articlefragment',
            name='article',
            field=models.ForeignKey(help_text=b'all fragments belong to an article, only some fragments belong to an article version', on_delete=django.db.models.deletion.CASCADE, to='publisher.Article'),
        ),
        migrations.AlterField(
            model_name='articlefragment',
            name='version',
            field=models.PositiveSmallIntegerField(help_text=b'if null, fragment applies only to a specific version of article', null=True),
        ),
        migrations.AlterModelOptions(
            name='articleversion',
            options={'ordering': ('version',)},
        ),
        migrations.AlterField(
            model_name='article',
            name='manuscript_id',
            field=models.BigIntegerField(help_text=b'article identifier from beginning of submission process right through to end of publication.', unique=True),
        ),
        migrations.AlterField(
            model_name='article',
            name='datetime_record_created',
            field=models.DateTimeField(auto_now_add=True, help_text='Date this article was created'),
        ),
        migrations.AlterField(
            model_name='article',
            name='datetime_record_updated',
            field=models.DateTimeField(auto_now=True, help_text='Date this article was updated'),
        ),
        migrations.AlterField(
            model_name='article',
            name='decision',
            field=models.CharField(blank=True, choices=[('RJI', 'Reject Initial Submission'), ('RJF', 'Reject Full Submission'), ('RVF', 'Revise Full Submission'), ('AF', 'Accept Full Submission'), ('EF', 'Encourage Full Submission'), ('SW', 'Simple Withdraw')], max_length=25, null=True),
        ),
        migrations.AlterField(
            model_name='article',
            name='doi',
            field=models.CharField(help_text="Article's unique ID in the wider world. All articles must have one as an absolute minimum", max_length=255, unique=True),
        ),
        migrations.AlterField(
            model_name='article',
            name='ejp_type',
            field=models.CharField(blank=True, choices=[('RA', 'Research article'), ('SR', 'Short report'), ('AV', 'Research advance'), ('RR', 'Registered report'), ('TR', 'Tools and resources')], help_text='article as exported from EJP submission system', max_length=3, null=True),
        ),
        migrations.AlterField(
            model_name='article',
            name='initial_decision',
            field=models.CharField(blank=True, choices=[('RJI', 'Reject Initial Submission'), ('RJF', 'Reject Full Submission'), ('RVF', 'Revise Full Submission'), ('AF', 'Accept Full Submission'), ('EF', 'Encourage Full Submission'), ('SW', 'Simple Withdraw')], max_length=25, null=True),
        ),
        migrations.AlterField(
            model_name='article',
            name='manuscript_id',
            field=models.BigIntegerField(help_text='article identifier from beginning of submission process right through to end of publication.', unique=True),
        ),
        migrations.AlterField(
            model_name='article',
            name='rev1_decision',
            field=models.CharField(blank=True, choices=[('RJI', 'Reject Initial Submission'), ('RJF', 'Reject Full Submission'), ('RVF', 'Revise Full Submission'), ('AF', 'Accept Full Submission'), ('EF', 'Encourage Full Submission'), ('SW', 'Simple Withdraw')], max_length=25, null=True),
        ),
        migrations.AlterField(
            model_name='article',
            name='rev2_decision',
            field=models.CharField(blank=True, choices=[('RJI', 'Reject Initial Submission'), ('RJF', 'Reject Full Submission'), ('RVF', 'Revise Full Submission'), ('AF', 'Accept Full Submission'), ('EF', 'Encourage Full Submission'), ('SW', 'Simple Withdraw')], max_length=25, null=True),
        ),
        migrations.AlterField(
            model_name='article',
            name='rev3_decision',
            field=models.CharField(blank=True, choices=[('RJI', 'Reject Initial Submission'), ('RJF', 'Reject Full Submission'), ('RVF', 'Revise Full Submission'), ('AF', 'Accept Full Submission'), ('EF', 'Encourage Full Submission'), ('SW', 'Simple Withdraw')], max_length=25, null=True),
        ),
        migrations.AlterField(
            model_name='article',
            name='rev4_decision',
            field=models.CharField(blank=True, choices=[('RJI', 'Reject Initial Submission'), ('RJF', 'Reject Full Submission'), ('RVF', 'Revise Full Submission'), ('AF', 'Accept Full Submission'), ('EF', 'Encourage Full Submission'), ('SW', 'Simple Withdraw')], max_length=25, null=True),
        ),
        migrations.AlterField(
            model_name='article',
            name='type',
            field=models.CharField(blank=True, help_text='xml article-type.', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='articlefragment',
            name='article',
            field=models.ForeignKey(help_text='all fragments belong to an article, only some fragments belong to an article version', on_delete=django.db.models.deletion.CASCADE, to='publisher.Article'),
        ),
        migrations.AlterField(
            model_name='articlefragment',
            name='fragment',
            field=annoying.fields.JSONField(deserializer=json.loads, help_text='partial piece of article data to be merged in', serializer=annoying.fields.dumps),
        ),
        migrations.AlterField(
            model_name='articlefragment',
            name='position',
            field=models.PositiveSmallIntegerField(default=1, help_text='position in the merge order with lower fragments merged first'),
        ),
        migrations.AlterField(
            model_name='articlefragment',
            name='type',
            field=models.CharField(help_text='the type of fragment, eg "xml", "content-header", etc', max_length=25),
        ),
        migrations.AlterField(
            model_name='articlefragment',
            name='version',
            field=models.PositiveSmallIntegerField(help_text='if null, fragment applies only to a specific version of article', null=True),
        ),
        migrations.AlterField(
            model_name='articleversion',
            name='article_json_v1',
            field=annoying.fields.JSONField(blank=True, deserializer=json.loads, help_text='Valid article-json.', null=True, serializer=annoying.fields.dumps),
        ),
        migrations.AlterField(
            model_name='articleversion',
            name='article_json_v1_snippet',
            field=annoying.fields.JSONField(blank=True, deserializer=json.loads, help_text='Valid article-json snippet, extracted from the valid article-json', null=True, serializer=annoying.fields.dumps),
        ),
        migrations.AlterField(
            model_name='articleversion',
            name='datetime_published',
            field=models.DateTimeField(blank=True, help_text='Date article first appeared on website', null=True),
        ),
        migrations.AlterField(
            model_name='articleversion',
            name='datetime_record_created',
            field=models.DateTimeField(auto_now_add=True, help_text='Date this article was created'),
        ),
        migrations.AlterField(
            model_name='articleversion',
            name='datetime_record_updated',
            field=models.DateTimeField(auto_now=True, help_text='Date this article was updated'),
        ),
        migrations.AlterField(
            model_name='articleversion',
            name='status',
            field=models.CharField(blank=True, choices=[('poa', 'POA'), ('vor', 'VOR')], max_length=3, null=True),
        ),
        migrations.AlterField(
            model_name='articleversion',
            name='title',
            field=models.CharField(blank=True, help_text='The title of the article', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='articleversion',
            name='version',
            field=models.PositiveSmallIntegerField(default=None, help_text='The version of the article. Version=None means pre-publication'),
        ),
        migrations.AlterField(
            model_name='journal',
            name='name',
            field=models.CharField(help_text='Name of the journal.', max_length=255, unique=True),
        ),
        migrations.CreateModel(
            name='ArticleVersionRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('articleversion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='publisher.ArticleVersion')),
                ('related_to', models.ForeignKey(help_text='the Article this ArticleVersion is related to', on_delete=django.db.models.deletion.CASCADE, to='publisher.Article')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='articleversionrelation',
            unique_together=set([('articleversion', 'related_to')]),
        ),
        migrations.CreateModel(
            name='ArticleVersionExtRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uri', models.URLField(help_text='location of external object', max_length=2000)),
                ('citation', annoying.fields.JSONField(deserializer=publisher.utils.ordered_json_loads, help_text='snippet of json describing the external link', serializer=publisher.utils.json_dumps)),
                ('articleversion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='publisher.ArticleVersion')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='articleversionextrelation',
            unique_together=set([('articleversion', 'uri')]),
        ),
        migrations.AlterField(
            model_name='articlefragment',
            name='version',
            field=models.PositiveSmallIntegerField(blank=True, help_text='if null, fragment applies only to a specific version of article', null=True),
        ),
        migrations.AlterField(
            model_name='article',
            name='ejp_type',
            field=models.CharField(blank=True, choices=[('RA', 'Research article'), ('SR', 'Short report'), ('AV', 'Research advance'), ('RR', 'Registered report'), ('TR', 'Tools and resources'), ('RE', 'Unknown')], help_text='article as exported from EJP submission system', max_length=3, null=True),
        ),
        migrations.AlterField(
            model_name='article',
            name='ejp_type',
            field=models.CharField(blank=True, choices=[('RA', 'Research article'), ('SR', 'Short report'), ('AV', 'Research advance'), ('RR', 'Registered report'), ('TR', 'Tools and resources'), ('RE', 'Research exchange'), ('RS', 'Unknown')], help_text='article as exported from EJP submission system', max_length=3, null=True),
        ),
        migrations.AlterField(
            model_name='article',
            name='ejp_type',
            field=models.CharField(blank=True, choices=[('RA', 'Research article'), ('SR', 'Short report'), ('AV', 'Research advance'), ('RR', 'Registered report'), ('TR', 'Tools and resources'), ('RE', 'Research exchange'), ('RS', 'Replication Study')], help_text='article as exported from EJP submission system', max_length=3, null=True),
        ),
        migrations.AlterModelOptions(
            name='articlefragment',
            options={'ordering': ('position', 'datetime_record_created')},
        ),
        migrations.AlterField(
            model_name='article',
            name='doi',
            field=models.CharField(help_text="Article's unique ID in the wider world. All articles must have one as an absolute minimum", max_length=255, unique=True),
        ),
        migrations.AlterField(
            model_name='articlefragment',
            name='datetime_record_created',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.CreateModel(
            name='ArticleEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.CharField(choices=[('date-xml-received', 'date received (XML)'), ('date-xml-accepted', 'date accepted (XML)'), ('datetime-action-ingest', "'ingest' event"), ('datetime-action-publish', "'publish' event")], max_length=25)),
                ('datetime_event', models.DateTimeField()),
                ('value', models.CharField(blank=True, help_text='a value, if any, associated with this event', max_length=50, null=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='publisher.Article')),
            ],
            options={
                'ordering': ('datetime_event', 'event'),
            },
        ),
        migrations.AlterUniqueTogether(
            name='articleevent',
            unique_together=set([('article', 'event', 'datetime_event')]),
        ),
        migrations.AddField(
            model_name='article',
            name='date_accepted',
            field=models.DateField(blank=True, help_text="xml 'accepted' date. not all articles types have this. ", null=True),
        ),
        migrations.AddField(
            model_name='article',
            name='date_received',
            field=models.DateField(blank=True, help_text="xml 'received' date. not all article types have this.", null=True),
        ),
        migrations.AlterField(
            model_name='article',
            name='ejp_type',
            field=models.CharField(blank=True, choices=[('RA', 'Research article'), ('SR', 'Short report'), ('AV', 'Research advance'), ('RR', 'Registered report'), ('TR', 'Tools and resources'), ('RE', 'Research exchange'), ('SC', 'Scientific Correspondence'), ('RS', 'Replication Study')], help_text='article as exported from EJP submission system', max_length=3, null=True),
        ),
        migrations.AlterField(
            model_name='article',
            name='ejp_type',
            field=models.CharField(blank=True, help_text='article as exported from EJP submission system', max_length=3, null=True),
        ),
        migrations.AlterField(
            model_name='articleevent',
            name='event',
            field=models.CharField(choices=[('date-qc', 'quality check date'), ('date-decision', 'decision date'), ('date-xml-received', 'received date (XML)'), ('date-xml-accepted', 'accepted date (XML)'), ('datetime-action-ingest', "'ingest' event"), ('datetime-action-publish', "'publish' event")], max_length=25),
        ),
        migrations.AddField(
            model_name='articleversion',
            name='article_json_hash',
            field=models.CharField(blank=True, help_text='md5 digest of merged result. see `fragment_logic.hash_ajson` for algorithm', max_length=32, null=True),
        ),
        migrations.AlterField(
            model_name='articlefragment',
            name='fragment',
            field=annoying.fields.JSONField(deserializer=publisher.utils.ordered_json_loads, help_text='partial piece of article data to be merged in', serializer=publisher.utils.json_dumps),
        ),
        migrations.AlterField(
            model_name='articleversion',
            name='article_json_v1',
            field=annoying.fields.JSONField(blank=True, deserializer=publisher.utils.ordered_json_loads, help_text='Valid article-json.', null=True, serializer=publisher.utils.json_dumps),
        ),
        migrations.AlterField(
            model_name='articleversion',
            name='article_json_v1_snippet',
            field=annoying.fields.JSONField(blank=True, deserializer=publisher.utils.ordered_json_loads, help_text='Valid article-json snippet, extracted from the valid article-json', null=True, serializer=publisher.utils.json_dumps),
        ),
    ]
